#version: '3'
networks:
  {{network_name}}:
    driver: ipvlan
    driver_opts:
      parent: enp1s0d1 # the interface on your docker host that it will tunnel through
      ipvlan_mode: l3 # Layer 3 mode
    ipam:
      config:
        - subnet: 192.168.21.0/24 # your networks subnet
        - subnet: 192.168.22.0/24 # your networks subnet
    name: {{network_name}}
services:
  #--- OpenWebUI  ---
  {{webui_service_name}}:
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    environment:
      # after you 
      # - "ENABLE_SIGNUP=false"
      # if you disable ollama then remove the following line
      - "OLLAMA_BASE_URL=${OLLAMA_URL}"
      # if you disable ollama then set the following to false
      - "ENABLE_OLLAMA_API=true"
      - "WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}"
    container_name: {{webui_service_name}}
    volumes:
      - ${DATA_DIR-./data}/open-webui:/app/backend/data
    # Removed in v2, defaulting to 8080
    # {% if webui_port %}
    # ports:
    #  - "8080:8080"
    #{% endif %}
    ports:
      - 8080:8080    
    networks:
      {{network_name}}:
        ipv4_address: 192.168.22.50    
    #Removed in v2, defaulting to
    #extra_hosts:
    #  - "host.docker.internal:host-gateway"
      
  #--- Postegresql DB ---
  {{db_service_name}}:
    image: postgres:15
    restart: unless-stopped
    container_name: {{db_service_name}}
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    volumes:
    - ${DATA_DIR-./data}/postgres:/var/lib/postgresql/data
    ports:
       - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_SECRET_PWD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      {{network_name}}:
        ipv4_address: 192.168.22.15
      
  #--- litellm ---
  {{llm_service_name}}:
    image: ghcr.io/berriai/litellm:main-latest
    restart: unless-stopped
    container_name: {{llm_service_name}}
    depends_on:
      - {{db_service_name}}
    ports:
       - "4000:4000"
    volumes:
     - ${CONF_DIR-./conf}/litellm/config.yaml:/app/config.yaml
    command: --port 4000 --config /app/config.yaml
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_SECRET_PWD}@${DB_SERVICE_NAME}:5432/litellm
    networks:
      {{network_name}}:
        ipv4_address: 192.168.22.10

  #--- Caddy ---
  {{caddy_service_name}}:
    build:
      context: ./images/caddy
      dockerfile: ./Dockerfile
    restart: unless-stopped
    container_name: {{caddy_service_name}}
    depends_on:
      - {{webui_service_name}}
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - API_SUBDOMAIN=${API_SUBDOMAIN}
      - APP_SUBDOMAIN=${APP_SUBDOMAIN}
      - OLLAMA_URL=${OLLAMA_URL}
      - OLLAMA_API_KEY=${OLLAMA_API_KEY}
      - WEBUI_SERVICE_NAME=${WEBUI_SERVICE_NAME}
    volumes:
      - ${CONF_DIR-./conf}/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${CONF_DIR-./conf}/caddy/401.json:/srv/401.json
      - ${DATA_DIR-./data}/caddy:/data/caddy
      - ${DATA_DIR-./data}/caddy/var/log:/var/log/
    # Removed in v2, defaulting to 443
    #{% if publish_locally %}
    #ports:
    #  - "443:443"
    #{% endif %}
    ports:
      - "443:443"
      - "443:443/udp"
    networks:
      {{network_name}}:
        ipv4_address: 192.168.21.5
    #Removed in v2, defaulting to
    #extra_hosts:
    #  - "host.docker.internal:host-gateway"
  #--- Cloudflared ---
  {{cloudflared_service_name}}:
    image: cloudflare/cloudflared
    restart: unless-stopped
    container_name: {{cloudflared_service_name}}
    depends_on:
      - {{caddy_service_name}}
    volumes:
      - ${CONF_DIR-./conf}/cloudflared/config.yaml:/etc/cloudflared/config.yml
      - ${DATA_DIR-./data}/cloudflared/credentials.json:/etc/cloudflared/credentials.json
    command: tunnel --config /etc/cloudflared/config.yml run #--loglevel debug run
    networks:
      {{network_name}}:
        ipv4_address: 192.168.21.3
